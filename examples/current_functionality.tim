print("basic print functionality")
print(1100 + 150 * 2 + 37 - 100)
print(1 * 2 + 3 / (4 + true))
print(1 + 1 - 1)

print("\nvariables and printing of variables")
u16 bla
print(bla)
u16 bla2 = 1337
print(bla2)

print("\ntesting types")
u1 _u1 = 1
u8 _u8 = 12
u16 _u16 = 1234
u32 _u32 = 123456
u64 _u64 = 12345678
s8 _s8 = -12
s16 _s16 = -1234
s32 _s32 = 123456
s64 _s64 = -12345678
f32 _f32 = -12345678
f64 _f64 = -12345678

print("\nprinting types")
print(_u1)
print(_u8)
print(_u16)
print(_u32)
print(_u64)
print(_s8)
print(_s16)
print(_s32)
print(_s64)
print(_f32)
print(_f64)

print("\nboolean expressions")
print(1 == 1)
print(1 == 2)
print(2 > 1)
print(1 > 2)
print(2 >= 1)
print(1 >= 1)
print(1 >= 2)
print(1 < 2)
print(2 < 1)
print(1 <= 2)
print(1 <= 1)
print(2 <= 1)
print(1337 != 1338)
print(1337 != 1337)

print("\nparse an if-statement")
if 1337:
    print(1337)
else if 1338:
    print(1338)
else:
    print(0)

print("\ntesting pre and post increment/decrement")
u8 index = 0
print(index++)
print(index++)
u8 other_index = 0
print(++other_index)
print(--other_index)

print("\nparsing a for-loop statement")
for u8 i = 0; i < 10; i++:
    i++
    print(i)
print("and parsing a while-loop statement")
u8 idx = 0
while idx++ < 10:
    idx++
    print(idx)

print("\nparsing function statements")
u8 func1(u8 argument):
    print(argument)
    u8 local = 1
    local++
    print(local)
    return argument + local
u8 func2():  // u8 as we don't support pointers (yet) :s
    print(1337)
    return null
void func3(u8 a, u8 b, u8 c):
    print(a + b + c)
    return
print("and call the functions")
print("func1:")
u8 ret1 = func1(10)
print("return1:")
print(ret1)
print("func2:")
u8 ret2 = func2()
print("return2:")
print(ret2)
print("func3:")
func3(1, 2, 3)
print("func3 returns void")

print("\ntype-cast a value around")
u8 small = 123
print(small)
u16 big = (u16)small + 1337 // this is gonna be big
print(big)
u8 small_again = (u8)big // this is not able to hold the big number
print(small_again)
